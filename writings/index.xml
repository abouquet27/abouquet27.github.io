<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Writings on Adrien's Dashbook</title><link>/writings/</link><description>Recent content in Writings on Adrien's Dashbook</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 20 Jun 2025 00:00:00 +0000</lastBuildDate><atom:link href="/writings/index.xml" rel="self" type="application/rss+xml"/><item><title>Constant-Time client-side FHE operations</title><link>/writings/constant-time-client-side-fhe-operations/constant-time-fhe/</link><pubDate>Fri, 20 Jun 2025 00:00:00 +0000</pubDate><guid>/writings/constant-time-client-side-fhe-operations/constant-time-fhe/</guid><description>This paper was written under the supervision of Ph. D. candidates Christian Knabenhans from SPRING Lab at EPFL and is available in PDF format here.
Introduction The development of quantum computers presents a significant threat to classical Public-Key cryptographic systems. Many widely deployed cryptographic primitives, such as RSA, Diffie-Hellman, and Elliptic Curve Cryptography (ECC)â€”rely on the hardness of integer factorization or the discrete logarithm problem. These problems are vulnerable to quantum computers, and therefore enhance research on post-quantum cryptographic scheme.</description></item><item><title>Building a robust test suite of type confusion vulnerabilities</title><link>/writings/type-confusions/type-confusions/</link><pubDate>Fri, 07 Jun 2024 00:00:00 +0000</pubDate><guid>/writings/type-confusions/type-confusions/</guid><description>This paper was written under the supervision of Nicolas Badoux and Prof. Doc. sc. ETH Mathias Payer from HexHive Lab at EPFL and is available in PDF format on this repository.
&amp;ldquo;Before I came here I was confused about this subject. Having listened to your lecture I am still confused. But on a higher level.&amp;rdquo; - Enrico Fermi
Abstract C++ has a lot of vulnerabilities due to type confusion, which can lead to memory corruption and security vulnerabilities.</description></item></channel></rss>